name: Build and deploy on pull request test1234

on:
    pull_request:
        types:
            - closed
        branches:
            - main # Trigger the workflow on push to the deployment branch
    workflow_dispatch:
        inputs:
            version:
                description: "Commit hash (long) or tag to roll back to (leave empty for latest push). Check README for more info."
                required: false
                type: string
jobs:
    build:
        if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
        defaults:
            run:
                working-directory: test # Set the working directory for the test job
        runs-on: self-hosted

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.event.inputs.version || 'main' }}
                  fetch-depth: 0 # Fetch all history for all branches and tags

            - name: Install dependencies
              run: npm install

            - name: Build Angular app
              run: |
                  echo "building app"
                  npm run build

    deploy:
        needs: build
        if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
        defaults:
            run:
                working-directory: test # Set the working directory for the test job
        runs-on: self-hosted

        steps:
            - name: Stop IIS Site
              run: |
                  echo "stopping IIS server"
                  Stop-IISSite -name "angular app" -confirm:$false
              shell: powershell

            - name: Backup and deploy IIS Directory
              run: |
                  $pathMainFolder = "C:\iisServer"
                  $nameProject = "angular"

                  $regexFolderCheck = "$nameProject-\d{4}-\d{2}-\d{2}( \((\d{0,2})\))?$"  

                  $NewPath = "$pathMainFolder\$nameProject"
                  $BackupPath = "$newPath-$(Get-Date -Format "yyyy-MM-dd")"
                  $directories = Get-ChildItem -Path $pathMainFolder -Directory | Where-Object { $_.Name -match $regexFolderCheck }

                  if ($directories.Count -gt 3) {
                      $directories | Sort-Object -Property LastWriteTime | Select-Object -First 1 | Remove-Item -Recurse
                  }

                  $directories = Get-ChildItem -Path $pathMainFolder -Directory | Where-Object { $_.Name -match $regexFolderCheck }

                  if (Test-Path $BackupPath) {

                      $duplicateItems = $directories | Where-Object { $_.FullName -match [regex]::Escape($BackupPath) + "(\s\(\d+\))?$" }
                      if ($duplicateItems) {
                          $measure = $duplicateItems | Measure-Object
                          for ($i = $($measure.Count - 1); $i -ge 0; $i--) {
                              if ($duplicateItems[$i].FullName -and $duplicateItems[$i].FullName -ne "$BackupPath ($($i + 1))") {
                                  Rename-Item -Path $duplicateItems[$i].FullName -NewName "$BackupPath ($($i + 1))"
                              }
                          }
                      }
                  }

                  if (Test-Path $NewPath ) {
                      Move-Item -Path $NewPath -Destination $BackupPath
                  }

                  New-Item -ItemType Directory -Path $NewPath
                  Copy-Item -Recurse -Path C:\GitProjects\matero\test\dist\test\browser\* -Destination $NewPath
                  if (Test-Path "$BackupPath\web.config") {
                      Copy-Item "$BackupPath\web.config" "$NewPath\web.config"
                  }

              shell: powershell

            - name: Start IIS Site
              run: |
                  echo "starting IIS server"
                  Start-IISSite -Name "angular app"
              shell: powershell
